package dev.ricardo.movies;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;
import org.bson.types.ObjectId;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

@Document(collection = "reviews")  // Indicates this class is mapped to the 'reviews' collection in MongoDB
@Data  // Lombok annotation to generate getters, setters, toString, equals, and hashCode methods automatically
@NoArgsConstructor  // Lombok annotation to generate a no-argument constructor
@AllArgsConstructor  // Lombok annotation to generate a constructor with all fields
@ToString
@JsonSerialize
public class Review {

    @Id  // Marks this field as the identifier (primary key) for MongoDB
    @JsonSerialize(using = ToStringSerializer.class)  // Ensures the ObjectId is serialized as a string (not a full object)
    private ObjectId id;  // The unique identifier for each review, automatically generated by MongoDB

    @JsonProperty("body")  // This annotation ensures the 'body' field in the Review object maps to the 'body' field in the JSON payload
    private String body;  // The content of the review

    // Constructor to create a Review with only the body, leaving the id field for MongoDB to auto-generate
    public Review(String body) {
        this.body = body;  // Initialize the body of the review
    }

    @Override
    public String toString() {
        return "Review{" +
                "id='" + id.toString() + '\'' +
                ", body='" + body + '\'' +
                '}';
    }
}
